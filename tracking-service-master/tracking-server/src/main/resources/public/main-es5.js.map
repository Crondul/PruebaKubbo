{"version":3,"sources":["webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/services/stocks.service.ts","webpack:///src/app/services/warehouses.service.ts","webpack:///src/app/components/views/product-details/product-details.component.ts","webpack:///src/app/components/views/product-details/product-details.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/services/translation-resolver.service.ts","webpack:///src/app/components/new-product/new-product.component.ts","webpack:///src/app/components/new-product/new-product.component.html","webpack:///src/app/model/stock.ts","webpack:///src/app/services/products.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/views/products/products.component.ts","webpack:///src/app/components/views/products/products.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/views/new-stock/new-stock.component.ts","webpack:///src/app/components/views/new-stock/new-stock.component.html","webpack:///src/app/services/storage.service.ts","webpack:///src/app/model/product.ts","webpack:///src/app/configuration/Properties.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/utils/animations.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HeaderComponent","translateService","lang","use","changeLang","selector","templateUrl","styleUrls","StocksService","http","idProduct","get","stock","post","providedIn","WarehousesService","ProductDetailsComponent","route","storageService","stockService","location","product","dataSource","displayedColumns","getProduct","loadDataSource","paginator","queryParamsSubscriptor","unsubscribe","stocksSubscription","queryParams","subscribe","params","products","i","length","_id","getStocks","response","stocks","back","goBack","environment","production","TranslationResolverService","setDefaultLang","NewProductComponent","productsService","formBuilder","_snackBar","newProductAdded","initForm","productsSubscription","formGroup","group","name","required","sku","barcode","image","price","formValues","createProduct","emit","openSnackBar","error","enabled","message","action","open","duration","addProduct","Stock","id","_quantity","quantity","_status","status","_idProduct","_idWarehouse","idWarehouse","_nameWarehouse","nameWarehouse","_cityWarehouse","cityWarehouse","ProductsService","AppComponent","ProductsComponent","showNewProduct","textShowHide","state","stateHidden","getProducts","showHideNewProduct","rotateAndShow","animations","AppModule","forRoot","loader","provide","useFactory","deps","declarations","imports","providers","bootstrap","NewStockComponent","stocksService","warehouseService","warehouses","getWarehouses","warehousesSubscription","warehouse","createStock","addStock","StorageService","_products","JSON","parse","sessionStorage","getItem","setItem","stringify","Product","_name","_sku","_barcode","_image","_price","_enabled","baseUrl","productsUrl","stocksUrl","warehousesUrl","routes","path","resolve","children","component","AppRoutingModule","exports","Animations","transform","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n      private translateService: TranslateService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  changeLang(lang) {\n    this.translateService.use(lang);\n  }\n\n}\n","<div class=\"header_container\">\n    <div class=\"image_container\">\n        <a href=\"https://kubbo.io\"><img src=\"https://kubbo.io/wp-content/uploads/2019/08/logo-140.svg\" alt=\"logo\"></a>\n    </div>\n\n    <div class=\"select\">\n        <select #lang (change)=\"changeLang(lang.value)\">\n            <option value=\"en\"> en </option>\n            <option value=\"es\"> es </option>\n        </select>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {productsUrl, stocksUrl} from '../configuration/Properties';\nimport { Observable } from 'rxjs';\nimport {Stock} from \"../model/stock\";\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StocksService {\n\n  constructor(private http: HttpClient) { }\n\n  getStocks(idProduct): Observable<Array<Stock>> {\n    return this.http.get<Array<Stock>>(stocksUrl + '?idProduct=' + idProduct);\n  }\n\n  createStock(stock: Stock): Observable<Stock> {\n    return this.http.post<Stock>(stocksUrl, stock);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { warehousesUrl } from '../configuration/Properties';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehousesService {\n\n  constructor(private http: HttpClient) { }\n\n  getWarehouses(): Observable<any> {\n    return this.http.get<any>(warehousesUrl);\n  }\n}\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {StorageService} from \"../../../services/storage.service\";\nimport {Product} from \"../../../model/product\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {StocksService} from \"../../../services/stocks.service\";\nimport {Stock} from \"../../../model/stock\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {Location} from \"@angular/common\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    queryParamsSubscriptor: Subscription;\n    stocksSubscription: Subscription;\n\n    product: Product = new Product();\n    idProduct = {}\n    dataSource: MatTableDataSource<Stock> = new MatTableDataSource<Stock>();;\n    displayedColumns: string [] = ['id', 'quantity', 'status', 'nameWarehouse', 'cityWarehouse'];\n    private stocks: Stock[];\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(\n        private route: ActivatedRoute,\n        private storageService: StorageService,\n        private stockService: StocksService,\n        private location: Location\n    ) { }\n\n    ngOnInit(): void {\n        this.getProduct();\n        this.loadDataSource();\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n    }\n\n    ngOnDestroy() {\n        if(this.queryParamsSubscriptor !== null && typeof this.queryParamsSubscriptor !== 'undefined') {\n            this.queryParamsSubscriptor.unsubscribe();\n        }\n\n        if(this.stocksSubscription !== null && typeof this.stocksSubscription !== 'undefined') {\n            this.stocksSubscription.unsubscribe();\n        }\n    }\n\n    getProduct() {\n        this.queryParamsSubscriptor = this.route.queryParams.subscribe(params => {\n            const products: Product[] = this.storageService.products;\n\n            if(params['id']) {\n\n                for(let i = 0 ; i < products.length; i++) {\n                    const product: Product = products[i];\n                    if(params['id'] == product._id) {\n                        this.product = product;\n                        this.idProduct = { idProduct: product._id }\n                    }\n                }\n            }\n        });\n    }\n\n    loadDataSource() {\n        this.stocksSubscription = this.stockService.getStocks(this.product._id).subscribe(\n            (response: Stock[]) => {\n                if(response) {\n                    this.stocks = response;\n                    this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n                    this.dataSource.paginator = this.paginator;\n                }\n            }\n        );\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title><i class=\"fa fa-arrow-left\" (click)=\"goBack()\"></i> {{product._name}}</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <div class=\"imageContainer\">\n            <img mat-card-image src=\"{{product._image}}\" alt=\"Product photo\">\n        </div>\n        <mat-list>\n            <mat-list-item> {{ 'productDetails.sku' | translate}}: {{product._sku}} </mat-list-item>\n            <mat-list-item> {{ 'productDetails.barcode' | translate}}: {{product._barcode}} </mat-list-item>\n            <mat-list-item> {{ 'productDetails.price' | translate}}: {{product._price}} </mat-list-item>\n            <mat-list-item><a [routerLink]=\"['/newStock']\" [queryParams]=\"idProduct\">{{ 'productDetails.addNew' | translate}}</a></mat-list-item>\n        </mat-list>\n    </mat-card-content>\n</mat-card>\n\n<div class=\"mat-elevation-z8\">\n    <mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.idStock' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.quantity' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._quantity}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.status' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"nameWarehouse\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.warehouse' | translate}}\n                <i class=\"fa fa-warehouse\"></i>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._nameWarehouse}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cityWarehouse\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.city' | translate}}\n                <i class=\"fa fa-city\"></i>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._cityWarehouse}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { productsUrl } from '../configuration/Properties';\r\nimport { Observable } from 'rxjs';\r\nimport {Product} from \"../model/product\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TranslationResolverService {\r\n\r\n    lang = 'en';\r\n\r\n    constructor(\r\n        private translateService: TranslateService\r\n    ) {\r\n    }\r\n\r\n    async resolve() {\r\n        this.translateService.setDefaultLang(this.lang);\r\n    }\r\n\r\n    public setLang(lang) {\r\n        this.lang = lang;\r\n        this.translateService.use(lang);\r\n    }\r\n}","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductsService} from \"../../services/products.service\";\nimport {Product} from \"../../model/product\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {Subscription} from \"rxjs\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-new-product',\n  templateUrl: './new-product.component.html',\n  styleUrls: ['./new-product.component.scss']\n})\nexport class NewProductComponent implements OnInit, OnDestroy {\n\n  @Output() newProductAdded: EventEmitter<void> = new EventEmitter<void>();\n\n  private productsSubscription: Subscription;\n\n  formGroup: FormGroup;\n\n  constructor(\n      private productsService: ProductsService,\n      private formBuilder: FormBuilder,\n      private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  ngOnDestroy() {\n    if(this.productsSubscription !== null && typeof this.productsSubscription !== 'undefined') {\n      this.productsSubscription.unsubscribe();\n    }\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      sku: ['', Validators.required],\n      barcode: ['', Validators.required],\n      image: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  addProduct(formValues) {\n    const product: Product = this.createProduct(formValues);\n    this.productsSubscription = this.productsService.createProduct(product).subscribe(\n        (response: Product) => {\n          if(response) {\n            this.newProductAdded.emit();\n            this.openSnackBar('Product Added', 'Close');\n          }\n        },\n        error => {\n          this.openSnackBar('Error adding the product', 'Close');\n        }\n    );\n  }\n\n  createProduct(formValues): Product {\n    const product = new Product();\n\n    if(formValues['name']) {\n      product.name = formValues['name'];\n    }\n\n    if(formValues['sku']) {\n      product.sku = formValues['sku'];\n    }\n\n    if(formValues['barcode']) {\n      product.barcode = formValues['barcode'];\n    }\n\n    if(formValues['image']) {\n      product.image = formValues['image'];\n    }\n\n    if(formValues['price']) {\n      product.price = formValues['price'];\n    }\n\n    product.enabled = false;\n\n    return product;\n  }\n\n  get name() { return this.formGroup.get('name'); }\n  get sku() { return this.formGroup.get('sku'); }\n  get barcode() { return this.formGroup.get('barcode'); }\n  get image() { return this.formGroup.get('image'); }\n  get price() { return this.formGroup.get('price'); }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"addProduct(formGroup.value)\">\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.name' | translate}}</mat-label>\n            <input matInput id=\"name\" type=\"text\" formControlName=\"name\">\n            <mat-error *ngIf=\"name.invalid\">{{ 'products.error.name' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.sku' | translate}}</mat-label>\n            <input matInput id=\"sku\" type=\"text\" formControlName=\"sku\">\n            <mat-error *ngIf=\"sku.invalid\">{{ 'products.error.sku' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.barcode' | translate}}</mat-label>\n            <input matInput id=\"barcode\" type=\"text\" formControlName=\"barcode\">\n            <mat-error *ngIf=\"barcode.invalid\">{{ 'products.error.barcode' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.price' | translate}}</mat-label>\n            <input matInput id=\"price\" type=\"text\" formControlName=\"price\">\n            <mat-error *ngIf=\"price.invalid\">{{ 'products.error.price' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.image' | translate}}</mat-label>\n            <input matInput id=\"image\" type=\"text\" formControlName=\"image\">\n            <mat-error *ngIf=\"image.invalid\">{{ 'products.error.image' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <button mat-raised-button color=\"accent\" type=\"submit\">{{ 'products.addButton' | translate}}</button>\n\n</form>","export class Stock {\r\n    _id: number;\r\n    _quantity: number;\r\n    _status: string;\r\n    _idProduct: number;\r\n    _idWarehouse: number;\r\n    _nameWarehouse: string;\r\n    _cityWarehouse: string;\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(id: number) {\r\n        this._id = id;\r\n    }\r\n\r\n    public get quantity(): number {\r\n        return this._quantity;\r\n    }\r\n\r\n    public set quantity(quantity: number) {\r\n        this._quantity = quantity;\r\n    }\r\n\r\n    public get status(): string {\r\n        return this._status;\r\n    }\r\n\r\n    public set status(status: string) {\r\n        this._status = status;\r\n    }\r\n\r\n    public get idProduct(): number {\r\n        return this._idProduct;\r\n    }\r\n\r\n    public set idProduct(idProduct: number) {\r\n        this._idProduct = idProduct;\r\n    }\r\n\r\n    public get idWarehouse(): number {\r\n        return this._idWarehouse;\r\n    }\r\n\r\n    public set idWarehouse(idWarehouse: number) {\r\n        this._idWarehouse = idWarehouse;\r\n    }\r\n\r\n    public get nameWarehouse(): string {\r\n        return this._nameWarehouse;\r\n    }\r\n\r\n    public set nameWarehouse(nameWarehouse: string) {\r\n        this._nameWarehouse = nameWarehouse;\r\n    }\r\n\r\n    public get cityWarehouse(): string {\r\n        return this._cityWarehouse;\r\n    }\r\n\r\n    public set cityWarehouse(cityWarehouse: string) {\r\n        this._cityWarehouse = cityWarehouse;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { productsUrl } from '../configuration/Properties';\nimport { Observable } from 'rxjs';\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Array<Product>> {\n    return this.http.get<Array<Product>>(productsUrl);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(productsUrl, product);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ProductsService } from './services/products.service';\nimport { StocksService } from './services/stocks.service';\nimport { WarehousesService } from './services/warehouses.service';\nimport { stringify } from 'querystring';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(){};\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"mat-app-background\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\r\nimport {ProductsService} from \"../../../services/products.service\";\r\nimport {Product} from \"../../../model/product\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {StorageService} from \"../../../services/storage.service\";\r\nimport {Animations} from \"../../../utils/animations\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\n\r\n@Component({\r\n    selector: 'app-products',\r\n    templateUrl: './products.component.html',\r\n    styleUrls: ['./products.component.scss'],\r\n    animations: [Animations]\r\n})\r\nexport class ProductsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private products: Product[];\r\n    dataSource: MatTableDataSource<Product> = new MatTableDataSource<Product>();\r\n    displayedColumns: string [] = ['id', 'name', 'sku', 'barcode', 'price', 'goToDetails'];\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    private productsSubscription: Subscription;\r\n\r\n    showNewProduct: boolean = false;\r\n    textShowHide: string = 'ADD NEW PRODUCT';\r\n\r\n    state: string = 'default';\r\n    stateHidden: string = 'hidden';\r\n\r\n    constructor(\r\n        private productsService: ProductsService,\r\n        private storageService: StorageService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.loadDataSource();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.productsSubscription !== null && typeof this.productsSubscription !== 'undefined') {\r\n            this.productsSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    loadDataSource() {\r\n        this.productsSubscription = this.productsService.getProducts().subscribe(\r\n            (response: Product[]) => {\r\n                if(response) {\r\n                    this.products = response;\r\n                    this.dataSource = new MatTableDataSource<Product>(this.products);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.storageService.products = response;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    newProductAdded() {\r\n        this.showHideNewProduct();\r\n        this.loadDataSource();\r\n    }\r\n\r\n    showHideNewProduct() {\r\n        this.rotateAndShow();\r\n        this.showNewProduct = !this.showNewProduct;\r\n    }\r\n\r\n    private rotateAndShow() {\r\n        this.state = (this.state === 'default' ? 'rotated' : 'default');\r\n        this.stateHidden = (this.stateHidden === 'hidden' ? 'shown' : 'hidden');\r\n    }\r\n}","<div class=\"mat-elevation-z8\">\r\n    <mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.id' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.name' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"sku\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.sku' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._sku}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"barcode\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.barcode' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._barcode}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.price' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._price}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"goToDetails\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/productDetails']\" [queryParams]=\"{id: element._id}\">{{ 'products.seeDetails' | translate}}</a> </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </mat-table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n\r\n<div class=\"add-product\" (click)=\"showHideNewProduct()\">\r\n    <span> {{ 'products.addNew' | translate}} </span>\r\n    <i [@rotatedState]='state' class=\"fa fa-arrow-down\"></i>\r\n</div>\r\n\r\n<div [@fade]='stateHidden'>\r\n    <app-new-product (newProductAdded)=\"newProductAdded()\"></app-new-product>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {ProductsComponent} from \"./components/views/products/products.component\";\nimport { NewProductComponent } from './components/new-product/new-product.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport { ProductDetailsComponent } from './components/views/product-details/product-details.component';\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatListModule} from \"@angular/material/list\";\nimport { NewStockComponent } from './components/views/new-stock/new-stock.component';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport { HeaderComponent } from './components/header/header.component';\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    NewProductComponent,\n    ProductDetailsComponent,\n    NewStockComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatListModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (http: HttpClient) => {\n          return new TranslateHttpLoader(http);\n        },\n        deps: [ HttpClient ]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Stock} from \"../../../model/stock\";\nimport {Subscription} from \"rxjs\";\nimport {StocksService} from \"../../../services/stocks.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {WarehousesService} from \"../../../services/warehouses.service\";\nimport {Warehouse} from \"../../../model/warehouse\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-new-stock',\n  templateUrl: './new-stock.component.html',\n  styleUrls: ['./new-stock.component.scss']\n})\nexport class NewStockComponent implements OnInit, OnDestroy {\n\n  private idProduct : number;\n\n  private stocksSubscription: Subscription;\n  private queryParamsSubscriptor: Subscription;\n  private warehousesSubscription: Subscription;\n\n  formGroup: FormGroup;\n  warehouses: Warehouse[] = [];\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private stocksService: StocksService,\n      private warehouseService: WarehousesService,\n      private route: ActivatedRoute,\n      private location: Location,\n      private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n    this.initForm();\n\n    this.queryParamsSubscriptor = this.route.queryParams.subscribe(params => {\n\n      if(params['idProduct']) {\n        this.idProduct = params['idProduct'];\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.stocksSubscription !== null && typeof this.stocksSubscription !== 'undefined') {\n      this.stocksSubscription.unsubscribe();\n    }\n\n    if(this.queryParamsSubscriptor !== null && typeof this.queryParamsSubscriptor !== 'undefined') {\n      this.queryParamsSubscriptor.unsubscribe();\n    }\n\n    if(this.warehousesSubscription !== null && typeof this.warehousesSubscription !== 'undefined') {\n      this.warehousesSubscription.unsubscribe();\n    }\n  }\n\n  getWarehouses() {\n    this.warehousesSubscription = this.warehouseService.getWarehouses().subscribe(\n        (response: Warehouse[]) => {\n          if(response) {\n            this.warehouses = response;\n          }\n        }\n    );\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      quantity: ['', Validators.required],\n      status: ['', Validators.required],\n      warehouse: ['', Validators.required]\n    })\n  }\n\n  addStock(formValues) {\n    const stock: Stock = this.createStock(formValues);\n    this.stocksSubscription = this.stocksService.createStock(stock).subscribe(\n        (response: Stock) => {\n          if(response) {\n            this.openSnackBar('Stock Added', 'Close');\n          }\n        },\n        error => {\n          this.openSnackBar('Error adding the stock', 'Close');\n        }\n    );\n  }\n\n  createStock(formValues): Stock {\n    const stock = new Stock();\n\n    if(formValues['quantity']) {\n      stock.quantity = formValues['quantity'];\n    }\n\n    if(formValues['status']) {\n      stock.status = formValues['status'];\n    }\n\n    if(formValues['warehouse']) {\n      stock.idWarehouse = formValues['warehouse'];\n    }\n\n    stock.idProduct = this.idProduct;\n\n    return stock;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  get quantity() { return this.formGroup.get('quantity'); }\n  get status() { return this.formGroup.get('status'); }\n  get warehouse() { return this.formGroup.get('warehouse'); }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n}\n","<h1><i class=\"fa fa-arrow-left\" (click)=\"goBack()\"></i>{{ 'addStock.title' | translate}}</h1>\n<mat-divider></mat-divider>\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"addStock(formGroup.value)\">\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.quantity' | translate}} </mat-label>\n            <input matInput id=\"quantity\" type=\"text\" formControlName=\"quantity\">\n            <mat-error *ngIf=\"quantity.invalid\">{{ 'addStock.error.quantity' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.status' | translate}}</mat-label>\n            <mat-select formControlName=\"status\">\n                <mat-option value=\"Available\"> Available </mat-option>\n                <mat-option value=\"Damaged\"> Damaged </mat-option>\n                <mat-option value=\"Sold\"> Sold </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"status.invalid\">{{ 'addStock.error.status' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.warehouse' | translate}}</mat-label>\n            <mat-select formControlName=\"warehouse\">\n                <mat-option *ngFor=\"let warehouse of warehouses\" [value]=\"warehouse._id\">\n                    {{warehouse._name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"warehouse.invalid\">{{ 'addStock.error.warehouse' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <button mat-raised-button color=\"accent\" type=\"submit\">Add</button>\n\n</form>","import { Injectable } from '@angular/core';\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private _products: Array<Product> = [];\n\n  constructor() { }\n\n  public get products(): Array<Product> {\n    const products: Array<Product> = JSON.parse(sessionStorage.getItem('products'))\n    return products;\n  }\n\n  public set products(products: Array<Product>) {\n    this._products = products;\n    sessionStorage.setItem('products', JSON.stringify(products));\n  }\n\n}\n","export class Product {\r\n    _id: number;\r\n    _name: string;\r\n    _sku: string;\r\n    _barcode: string;\r\n    _image: string;\r\n    _price: string;\r\n    _enabled: boolean;\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(id: number) {\r\n        this._id = id;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    public get sku(): string {\r\n        return this._sku;\r\n    }\r\n\r\n    public set sku(sku: string) {\r\n        this._sku = sku;\r\n    }\r\n\r\n    public get barcode(): string {\r\n        return this._barcode;\r\n    }\r\n\r\n    public set barcode(barcode: string) {\r\n        this._barcode = barcode;\r\n    }\r\n\r\n    public get image(): string {\r\n        return this._image;\r\n    }\r\n\r\n    public set image(image: string) {\r\n        this._image = image;\r\n    }\r\n\r\n    public get price(): string {\r\n        return this._price;\r\n    }\r\n\r\n    public set price(price: string) {\r\n        this._price = price;\r\n    }\r\n\r\n    public get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    public set enabled(enabled: boolean) {\r\n        this._enabled = enabled;\r\n    }\r\n}","export const baseUrl = '/gui';\n//export const baseUrl = 'http://localhost:8000/gui';\nexport const productsUrl = baseUrl + '/products';\nexport const stocksUrl = baseUrl + '/stocks';\nexport const warehousesUrl = baseUrl + '/warehouses';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProductsComponent} from \"./components/views/products/products.component\";\nimport {ProductDetailsComponent} from \"./components/views/product-details/product-details.component\";\nimport {NewStockComponent} from \"./components/views/new-stock/new-stock.component\";\nimport {TranslationResolverService} from \"./services/translation-resolver.service\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    resolve: {\n      lang: TranslationResolverService\n    },\n    children: [\n      {\n        path: 'products',\n        component: ProductsComponent\n      },\n      {\n        path: 'productDetails',\n        component: ProductDetailsComponent\n      },\n      {\n        path: 'newStock',\n        component: NewStockComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {state, style, trigger, transition, animate} from \"@angular/animations\";\r\n\r\nexport const Animations = [\r\n    trigger('rotatedState', [\r\n        state('default', style({ transform: 'rotate(0)' })),\r\n        state('rotated', style({ transform: 'rotate(-180deg)' })),\r\n        transition('rotated => default', animate('400ms ease-out')),\r\n        transition('default => rotated', animate('400ms ease-in'))\r\n    ]),\r\n\r\n    trigger('fade', [\r\n        state('shown', style({\r\n            'opacity': '1', 'height': '*', 'padding-top': '*', 'padding-bottom': '*', 'overflow': 'hidden'\r\n        })),\r\n        state('hidden', style( {\r\n            'opacity': '0', 'height': '0', 'padding-top': '0', 'padding-bottom': '0', 'overflow': 'hidden',\r\n            'margin-top': '0', 'margin-bottom': '0'\r\n        })),\r\n        transition('hidden => shown', animate('300ms ease')),\r\n        transition('shown => hidden', animate('300ms ease'))\r\n    ])\r\n];\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}