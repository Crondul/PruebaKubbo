{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/stocks.service.ts","./src/app/services/warehouses.service.ts","./src/app/components/views/product-details/product-details.component.ts","./src/app/components/views/product-details/product-details.component.html","./src/environments/environment.ts","./src/app/services/translation-resolver.service.ts","./src/app/components/new-product/new-product.component.ts","./src/app/components/new-product/new-product.component.html","./src/app/model/stock.ts","./src/app/services/products.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/views/products/products.component.ts","./src/app/components/views/products/products.component.html","./src/app/app.module.ts","./src/app/components/views/new-stock/new-stock.component.ts","./src/app/components/views/new-stock/new-stock.component.html","./src/app/services/storage.service.ts","./src/app/model/product.ts","./src/app/configuration/Properties.ts","./src/app/app-routing.module.ts","./src/app/utils/animations.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n      private translateService: TranslateService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  changeLang(lang) {\n    this.translateService.use(lang);\n  }\n\n}\n","<div class=\"header_container\">\n    <div class=\"image_container\">\n        <a href=\"https://kubbo.io\"><img src=\"https://kubbo.io/wp-content/uploads/2019/08/logo-140.svg\" alt=\"logo\"></a>\n    </div>\n\n    <div class=\"select\">\n        <select #lang (change)=\"changeLang(lang.value)\">\n            <option value=\"en\"> en </option>\n            <option value=\"es\"> es </option>\n        </select>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {productsUrl, stocksUrl} from '../configuration/Properties';\nimport { Observable } from 'rxjs';\nimport {Stock} from \"../model/stock\";\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StocksService {\n\n  constructor(private http: HttpClient) { }\n\n  getStocks(idProduct): Observable<Array<Stock>> {\n    return this.http.get<Array<Stock>>(stocksUrl + '?idProduct=' + idProduct);\n  }\n\n  createStock(stock: Stock): Observable<Stock> {\n    return this.http.post<Stock>(stocksUrl, stock);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { warehousesUrl } from '../configuration/Properties';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehousesService {\n\n  constructor(private http: HttpClient) { }\n\n  getWarehouses(): Observable<any> {\n    return this.http.get<any>(warehousesUrl);\n  }\n}\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {StorageService} from \"../../../services/storage.service\";\nimport {Product} from \"../../../model/product\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {StocksService} from \"../../../services/stocks.service\";\nimport {Stock} from \"../../../model/stock\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {Location} from \"@angular/common\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    queryParamsSubscriptor: Subscription;\n    stocksSubscription: Subscription;\n\n    product: Product = new Product();\n    idProduct = {}\n    dataSource: MatTableDataSource<Stock> = new MatTableDataSource<Stock>();;\n    displayedColumns: string [] = ['id', 'quantity', 'status', 'nameWarehouse', 'cityWarehouse'];\n    private stocks: Stock[];\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(\n        private route: ActivatedRoute,\n        private storageService: StorageService,\n        private stockService: StocksService,\n        private location: Location\n    ) { }\n\n    ngOnInit(): void {\n        this.getProduct();\n        this.loadDataSource();\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n    }\n\n    ngOnDestroy() {\n        if(this.queryParamsSubscriptor !== null && typeof this.queryParamsSubscriptor !== 'undefined') {\n            this.queryParamsSubscriptor.unsubscribe();\n        }\n\n        if(this.stocksSubscription !== null && typeof this.stocksSubscription !== 'undefined') {\n            this.stocksSubscription.unsubscribe();\n        }\n    }\n\n    getProduct() {\n        this.queryParamsSubscriptor = this.route.queryParams.subscribe(params => {\n            const products: Product[] = this.storageService.products;\n\n            if(params['id']) {\n\n                for(let i = 0 ; i < products.length; i++) {\n                    const product: Product = products[i];\n                    if(params['id'] == product._id) {\n                        this.product = product;\n                        this.idProduct = { idProduct: product._id }\n                    }\n                }\n            }\n        });\n    }\n\n    loadDataSource() {\n        this.stocksSubscription = this.stockService.getStocks(this.product._id).subscribe(\n            (response: Stock[]) => {\n                if(response) {\n                    this.stocks = response;\n                    this.dataSource = new MatTableDataSource<Stock>(this.stocks);\n                    this.dataSource.paginator = this.paginator;\n                }\n            }\n        );\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title><i class=\"fa fa-arrow-left\" (click)=\"goBack()\"></i> {{product._name}}</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <div class=\"imageContainer\">\n            <img mat-card-image src=\"{{product._image}}\" alt=\"Product photo\">\n        </div>\n        <mat-list>\n            <mat-list-item> {{ 'productDetails.sku' | translate}}: {{product._sku}} </mat-list-item>\n            <mat-list-item> {{ 'productDetails.barcode' | translate}}: {{product._barcode}} </mat-list-item>\n            <mat-list-item> {{ 'productDetails.price' | translate}}: {{product._price}} </mat-list-item>\n            <mat-list-item><a [routerLink]=\"['/newStock']\" [queryParams]=\"idProduct\">{{ 'productDetails.addNew' | translate}}</a></mat-list-item>\n        </mat-list>\n    </mat-card-content>\n</mat-card>\n\n<div class=\"mat-elevation-z8\">\n    <mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.idStock' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.quantity' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._quantity}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.status' | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"nameWarehouse\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.warehouse' | translate}}\n                <i class=\"fa fa-warehouse\"></i>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._nameWarehouse}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cityWarehouse\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'productDetails.city' | translate}}\n                <i class=\"fa fa-city\"></i>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element._cityWarehouse}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { productsUrl } from '../configuration/Properties';\r\nimport { Observable } from 'rxjs';\r\nimport {Product} from \"../model/product\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TranslationResolverService {\r\n\r\n    lang = 'en';\r\n\r\n    constructor(\r\n        private translateService: TranslateService\r\n    ) {\r\n    }\r\n\r\n    async resolve() {\r\n        this.translateService.setDefaultLang(this.lang);\r\n    }\r\n\r\n    public setLang(lang) {\r\n        this.lang = lang;\r\n        this.translateService.use(lang);\r\n    }\r\n}","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductsService} from \"../../services/products.service\";\nimport {Product} from \"../../model/product\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {Subscription} from \"rxjs\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-new-product',\n  templateUrl: './new-product.component.html',\n  styleUrls: ['./new-product.component.scss']\n})\nexport class NewProductComponent implements OnInit, OnDestroy {\n\n  @Output() newProductAdded: EventEmitter<void> = new EventEmitter<void>();\n\n  private productsSubscription: Subscription;\n\n  formGroup: FormGroup;\n\n  constructor(\n      private productsService: ProductsService,\n      private formBuilder: FormBuilder,\n      private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  ngOnDestroy() {\n    if(this.productsSubscription !== null && typeof this.productsSubscription !== 'undefined') {\n      this.productsSubscription.unsubscribe();\n    }\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      sku: ['', Validators.required],\n      barcode: ['', Validators.required],\n      image: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  addProduct(formValues) {\n    const product: Product = this.createProduct(formValues);\n    this.productsSubscription = this.productsService.createProduct(product).subscribe(\n        (response: Product) => {\n          if(response) {\n            this.newProductAdded.emit();\n            this.openSnackBar('Product Added', 'Close');\n          }\n        },\n        error => {\n          this.openSnackBar('Error adding the product', 'Close');\n        }\n    );\n  }\n\n  createProduct(formValues): Product {\n    const product = new Product();\n\n    if(formValues['name']) {\n      product.name = formValues['name'];\n    }\n\n    if(formValues['sku']) {\n      product.sku = formValues['sku'];\n    }\n\n    if(formValues['barcode']) {\n      product.barcode = formValues['barcode'];\n    }\n\n    if(formValues['image']) {\n      product.image = formValues['image'];\n    }\n\n    if(formValues['price']) {\n      product.price = formValues['price'];\n    }\n\n    product.enabled = false;\n\n    return product;\n  }\n\n  get name() { return this.formGroup.get('name'); }\n  get sku() { return this.formGroup.get('sku'); }\n  get barcode() { return this.formGroup.get('barcode'); }\n  get image() { return this.formGroup.get('image'); }\n  get price() { return this.formGroup.get('price'); }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"addProduct(formGroup.value)\">\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.name' | translate}}</mat-label>\n            <input matInput id=\"name\" type=\"text\" formControlName=\"name\">\n            <mat-error *ngIf=\"name.invalid\">{{ 'products.error.name' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.sku' | translate}}</mat-label>\n            <input matInput id=\"sku\" type=\"text\" formControlName=\"sku\">\n            <mat-error *ngIf=\"sku.invalid\">{{ 'products.error.sku' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.barcode' | translate}}</mat-label>\n            <input matInput id=\"barcode\" type=\"text\" formControlName=\"barcode\">\n            <mat-error *ngIf=\"barcode.invalid\">{{ 'products.error.barcode' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.price' | translate}}</mat-label>\n            <input matInput id=\"price\" type=\"text\" formControlName=\"price\">\n            <mat-error *ngIf=\"price.invalid\">{{ 'products.error.price' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'products.image' | translate}}</mat-label>\n            <input matInput id=\"image\" type=\"text\" formControlName=\"image\">\n            <mat-error *ngIf=\"image.invalid\">{{ 'products.error.image' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <button mat-raised-button color=\"accent\" type=\"submit\">{{ 'products.addButton' | translate}}</button>\n\n</form>","export class Stock {\r\n    _id: number;\r\n    _quantity: number;\r\n    _status: string;\r\n    _idProduct: number;\r\n    _idWarehouse: number;\r\n    _nameWarehouse: string;\r\n    _cityWarehouse: string;\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(id: number) {\r\n        this._id = id;\r\n    }\r\n\r\n    public get quantity(): number {\r\n        return this._quantity;\r\n    }\r\n\r\n    public set quantity(quantity: number) {\r\n        this._quantity = quantity;\r\n    }\r\n\r\n    public get status(): string {\r\n        return this._status;\r\n    }\r\n\r\n    public set status(status: string) {\r\n        this._status = status;\r\n    }\r\n\r\n    public get idProduct(): number {\r\n        return this._idProduct;\r\n    }\r\n\r\n    public set idProduct(idProduct: number) {\r\n        this._idProduct = idProduct;\r\n    }\r\n\r\n    public get idWarehouse(): number {\r\n        return this._idWarehouse;\r\n    }\r\n\r\n    public set idWarehouse(idWarehouse: number) {\r\n        this._idWarehouse = idWarehouse;\r\n    }\r\n\r\n    public get nameWarehouse(): string {\r\n        return this._nameWarehouse;\r\n    }\r\n\r\n    public set nameWarehouse(nameWarehouse: string) {\r\n        this._nameWarehouse = nameWarehouse;\r\n    }\r\n\r\n    public get cityWarehouse(): string {\r\n        return this._cityWarehouse;\r\n    }\r\n\r\n    public set cityWarehouse(cityWarehouse: string) {\r\n        this._cityWarehouse = cityWarehouse;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { productsUrl } from '../configuration/Properties';\nimport { Observable } from 'rxjs';\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Array<Product>> {\n    return this.http.get<Array<Product>>(productsUrl);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(productsUrl, product);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ProductsService } from './services/products.service';\nimport { StocksService } from './services/stocks.service';\nimport { WarehousesService } from './services/warehouses.service';\nimport { stringify } from 'querystring';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(){};\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"mat-app-background\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\r\nimport {ProductsService} from \"../../../services/products.service\";\r\nimport {Product} from \"../../../model/product\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {StorageService} from \"../../../services/storage.service\";\r\nimport {Animations} from \"../../../utils/animations\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\n\r\n@Component({\r\n    selector: 'app-products',\r\n    templateUrl: './products.component.html',\r\n    styleUrls: ['./products.component.scss'],\r\n    animations: [Animations]\r\n})\r\nexport class ProductsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private products: Product[];\r\n    dataSource: MatTableDataSource<Product> = new MatTableDataSource<Product>();\r\n    displayedColumns: string [] = ['id', 'name', 'sku', 'barcode', 'price', 'goToDetails'];\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    private productsSubscription: Subscription;\r\n\r\n    showNewProduct: boolean = false;\r\n    textShowHide: string = 'ADD NEW PRODUCT';\r\n\r\n    state: string = 'default';\r\n    stateHidden: string = 'hidden';\r\n\r\n    constructor(\r\n        private productsService: ProductsService,\r\n        private storageService: StorageService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.loadDataSource();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.productsSubscription !== null && typeof this.productsSubscription !== 'undefined') {\r\n            this.productsSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    loadDataSource() {\r\n        this.productsSubscription = this.productsService.getProducts().subscribe(\r\n            (response: Product[]) => {\r\n                if(response) {\r\n                    this.products = response;\r\n                    this.dataSource = new MatTableDataSource<Product>(this.products);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.storageService.products = response;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    newProductAdded() {\r\n        this.showHideNewProduct();\r\n        this.loadDataSource();\r\n    }\r\n\r\n    showHideNewProduct() {\r\n        this.rotateAndShow();\r\n        this.showNewProduct = !this.showNewProduct;\r\n    }\r\n\r\n    private rotateAndShow() {\r\n        this.state = (this.state === 'default' ? 'rotated' : 'default');\r\n        this.stateHidden = (this.stateHidden === 'hidden' ? 'shown' : 'hidden');\r\n    }\r\n}","<div class=\"mat-elevation-z8\">\r\n    <mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.id' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.name' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"sku\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.sku' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._sku}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"barcode\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.barcode' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._barcode}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef> {{ 'products.price' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element._price}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"goToDetails\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> <a [routerLink]=\"['/productDetails']\" [queryParams]=\"{id: element._id}\">{{ 'products.seeDetails' | translate}}</a> </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </mat-table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n\r\n<div class=\"add-product\" (click)=\"showHideNewProduct()\">\r\n    <span> {{ 'products.addNew' | translate}} </span>\r\n    <i [@rotatedState]='state' class=\"fa fa-arrow-down\"></i>\r\n</div>\r\n\r\n<div [@fade]='stateHidden'>\r\n    <app-new-product (newProductAdded)=\"newProductAdded()\"></app-new-product>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {ProductsComponent} from \"./components/views/products/products.component\";\nimport { NewProductComponent } from './components/new-product/new-product.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport { ProductDetailsComponent } from './components/views/product-details/product-details.component';\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatListModule} from \"@angular/material/list\";\nimport { NewStockComponent } from './components/views/new-stock/new-stock.component';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport { HeaderComponent } from './components/header/header.component';\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    NewProductComponent,\n    ProductDetailsComponent,\n    NewStockComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatListModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (http: HttpClient) => {\n          return new TranslateHttpLoader(http);\n        },\n        deps: [ HttpClient ]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Stock} from \"../../../model/stock\";\nimport {Subscription} from \"rxjs\";\nimport {StocksService} from \"../../../services/stocks.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {WarehousesService} from \"../../../services/warehouses.service\";\nimport {Warehouse} from \"../../../model/warehouse\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-new-stock',\n  templateUrl: './new-stock.component.html',\n  styleUrls: ['./new-stock.component.scss']\n})\nexport class NewStockComponent implements OnInit, OnDestroy {\n\n  private idProduct : number;\n\n  private stocksSubscription: Subscription;\n  private queryParamsSubscriptor: Subscription;\n  private warehousesSubscription: Subscription;\n\n  formGroup: FormGroup;\n  warehouses: Warehouse[] = [];\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private stocksService: StocksService,\n      private warehouseService: WarehousesService,\n      private route: ActivatedRoute,\n      private location: Location,\n      private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n    this.initForm();\n\n    this.queryParamsSubscriptor = this.route.queryParams.subscribe(params => {\n\n      if(params['idProduct']) {\n        this.idProduct = params['idProduct'];\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.stocksSubscription !== null && typeof this.stocksSubscription !== 'undefined') {\n      this.stocksSubscription.unsubscribe();\n    }\n\n    if(this.queryParamsSubscriptor !== null && typeof this.queryParamsSubscriptor !== 'undefined') {\n      this.queryParamsSubscriptor.unsubscribe();\n    }\n\n    if(this.warehousesSubscription !== null && typeof this.warehousesSubscription !== 'undefined') {\n      this.warehousesSubscription.unsubscribe();\n    }\n  }\n\n  getWarehouses() {\n    this.warehousesSubscription = this.warehouseService.getWarehouses().subscribe(\n        (response: Warehouse[]) => {\n          if(response) {\n            this.warehouses = response;\n          }\n        }\n    );\n  }\n\n  initForm() {\n    this.formGroup = this.formBuilder.group({\n      quantity: ['', Validators.required],\n      status: ['', Validators.required],\n      warehouse: ['', Validators.required]\n    })\n  }\n\n  addStock(formValues) {\n    const stock: Stock = this.createStock(formValues);\n    this.stocksSubscription = this.stocksService.createStock(stock).subscribe(\n        (response: Stock) => {\n          if(response) {\n            this.openSnackBar('Stock Added', 'Close');\n          }\n        },\n        error => {\n          this.openSnackBar('Error adding the stock', 'Close');\n        }\n    );\n  }\n\n  createStock(formValues): Stock {\n    const stock = new Stock();\n\n    if(formValues['quantity']) {\n      stock.quantity = formValues['quantity'];\n    }\n\n    if(formValues['status']) {\n      stock.status = formValues['status'];\n    }\n\n    if(formValues['warehouse']) {\n      stock.idWarehouse = formValues['warehouse'];\n    }\n\n    stock.idProduct = this.idProduct;\n\n    return stock;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  get quantity() { return this.formGroup.get('quantity'); }\n  get status() { return this.formGroup.get('status'); }\n  get warehouse() { return this.formGroup.get('warehouse'); }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n}\n","<h1><i class=\"fa fa-arrow-left\" (click)=\"goBack()\"></i>{{ 'addStock.title' | translate}}</h1>\n<mat-divider></mat-divider>\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"addStock(formGroup.value)\">\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.quantity' | translate}} </mat-label>\n            <input matInput id=\"quantity\" type=\"text\" formControlName=\"quantity\">\n            <mat-error *ngIf=\"quantity.invalid\">{{ 'addStock.error.quantity' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.status' | translate}}</mat-label>\n            <mat-select formControlName=\"status\">\n                <mat-option value=\"Available\"> Available </mat-option>\n                <mat-option value=\"Damaged\"> Damaged </mat-option>\n                <mat-option value=\"Sold\"> Sold </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"status.invalid\">{{ 'addStock.error.status' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>{{ 'addStock.warehouse' | translate}}</mat-label>\n            <mat-select formControlName=\"warehouse\">\n                <mat-option *ngFor=\"let warehouse of warehouses\" [value]=\"warehouse._id\">\n                    {{warehouse._name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"warehouse.invalid\">{{ 'addStock.error.warehouse' | translate}}</mat-error>\n        </mat-form-field>\n    </p>\n\n    <button mat-raised-button color=\"accent\" type=\"submit\">Add</button>\n\n</form>","import { Injectable } from '@angular/core';\nimport {Product} from \"../model/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private _products: Array<Product> = [];\n\n  constructor() { }\n\n  public get products(): Array<Product> {\n    const products: Array<Product> = JSON.parse(sessionStorage.getItem('products'))\n    return products;\n  }\n\n  public set products(products: Array<Product>) {\n    this._products = products;\n    sessionStorage.setItem('products', JSON.stringify(products));\n  }\n\n}\n","export class Product {\r\n    _id: number;\r\n    _name: string;\r\n    _sku: string;\r\n    _barcode: string;\r\n    _image: string;\r\n    _price: string;\r\n    _enabled: boolean;\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(id: number) {\r\n        this._id = id;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    public get sku(): string {\r\n        return this._sku;\r\n    }\r\n\r\n    public set sku(sku: string) {\r\n        this._sku = sku;\r\n    }\r\n\r\n    public get barcode(): string {\r\n        return this._barcode;\r\n    }\r\n\r\n    public set barcode(barcode: string) {\r\n        this._barcode = barcode;\r\n    }\r\n\r\n    public get image(): string {\r\n        return this._image;\r\n    }\r\n\r\n    public set image(image: string) {\r\n        this._image = image;\r\n    }\r\n\r\n    public get price(): string {\r\n        return this._price;\r\n    }\r\n\r\n    public set price(price: string) {\r\n        this._price = price;\r\n    }\r\n\r\n    public get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    public set enabled(enabled: boolean) {\r\n        this._enabled = enabled;\r\n    }\r\n}","export const baseUrl = '/gui';\n//export const baseUrl = 'http://localhost:8000/gui';\nexport const productsUrl = baseUrl + '/products';\nexport const stocksUrl = baseUrl + '/stocks';\nexport const warehousesUrl = baseUrl + '/warehouses';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProductsComponent} from \"./components/views/products/products.component\";\nimport {ProductDetailsComponent} from \"./components/views/product-details/product-details.component\";\nimport {NewStockComponent} from \"./components/views/new-stock/new-stock.component\";\nimport {TranslationResolverService} from \"./services/translation-resolver.service\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    resolve: {\n      lang: TranslationResolverService\n    },\n    children: [\n      {\n        path: 'products',\n        component: ProductsComponent\n      },\n      {\n        path: 'productDetails',\n        component: ProductDetailsComponent\n      },\n      {\n        path: 'newStock',\n        component: NewStockComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {state, style, trigger, transition, animate} from \"@angular/animations\";\r\n\r\nexport const Animations = [\r\n    trigger('rotatedState', [\r\n        state('default', style({ transform: 'rotate(0)' })),\r\n        state('rotated', style({ transform: 'rotate(-180deg)' })),\r\n        transition('rotated => default', animate('400ms ease-out')),\r\n        transition('default => rotated', animate('400ms ease-in'))\r\n    ]),\r\n\r\n    trigger('fade', [\r\n        state('shown', style({\r\n            'opacity': '1', 'height': '*', 'padding-top': '*', 'padding-bottom': '*', 'overflow': 'hidden'\r\n        })),\r\n        state('hidden', style( {\r\n            'opacity': '0', 'height': '0', 'padding-top': '0', 'padding-bottom': '0', 'overflow': 'hidden',\r\n            'margin-top': '0', 'margin-bottom': '0'\r\n        })),\r\n        transition('hidden => shown', animate('300ms ease')),\r\n        transition('shown => hidden', animate('300ms ease'))\r\n    ])\r\n];\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}